{"version":3,"file":"markdownItCodeSnippet.cjs","sources":["../src/plugin.js"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nconst TRANSCLUDE_WITH = 'TRANSCLUDE_WITH';\nconst TRANSCLUDE_AUTO = 'TRANSCLUDE_AUTO';\nconst TRANSCLUDE_LINE = 'TRANSCLUDE_LINE';\nconst TRANSCLUDE_TAG = 'TRANSCLUDE_TAG';\nconst NO_LINES_MATCHED = 'No lines matched.';\n\nexport default function plugin(md, options) {\n  options = Object.assign({}, {\n    throwOnError: true\n  }, options);\n\n  function getRootPath() {\n    return options.root || process.cwd();\n  }\n\n  function mkPathAbsolute(f) {\n    return path.resolve(f).replace(/[\\\\]/g, '/');\n  }\n\n  const fileExists = f => {\n    return fs.existsSync(f);\n  };\n\n  const readFileSync = f => {\n    const x = fileExists(f);\n    const msg = x ? fs.readFileSync(f).toString() : `Not Found: ${f}`;\n    if (!x && options.throwOnError) {\n      throw new Error(msg);\n    }\n    return msg;\n  };\n\n  function mkRegexSnippet(r) {\n    const old_r = r;\n    if (typeof r === 'string') {\n      r = r.replace(/([.\\[\\]|(){}+?*$^])/g, '\\\\$1');\n    }\n    return r;\n  }\n\n  const parseOptions = opts => {\n    const _t = {};\n    opts.trim().split(' ').forEach(pair => {\n      const [ opt, value ] = pair.split('=');\n      _t[opt] = value;\n    });\n    return _t;\n  };\n\n  const dataFactory = (state, pos, max) => {\n    const start = pos + 6;\n    const end = state.skipSpacesBack(max, pos) - 1;\n    const [ opts, fullpathWithAtSym ] = state.src.slice(start, end).trim().split('](');\n    const fullpath = mkPathAbsolute(fullpathWithAtSym.trim().replace(/^@/, getRootPath()).trim());\n    const pathParts = fullpath.split('/');\n    const fileParts = pathParts[pathParts.length - 1].split('.');\n\n    return {\n      file: {\n        resolve: fullpath,\n        path: pathParts.slice(0, pathParts.length - 1).join('/'),\n        name: fileParts.slice(0, fileParts.length - 1).join('.'),\n        ext: fileParts[fileParts.length - 1]\n      },\n      options: parseOptions(opts),\n      content: readFileSync(fullpath),\n      fileExists: fileExists(fullpath)\n    };\n  };\n\n  const optionsMap = ({\n    options\n  }) => ({\n    hasHighlight: options.highlight || false,\n    hasTransclusion: options.transclude || options.transcludeWith || options.transcludeAuto || options.transcludeTag || false,\n    get transclusionType() {\n      if (options.transcludeWith) return TRANSCLUDE_WITH;\n      if (options.transcludeAuto) return TRANSCLUDE_AUTO;\n      if (options.transcludeTag) return TRANSCLUDE_TAG;\n      if (options.transclude) return TRANSCLUDE_LINE;\n      return '';\n    },\n    get meta() {\n      return this.hasHighlight ? options.highlight : '';\n    }\n  });\n\n  const contentTransclusion = ({\n    content,\n    options\n  }, transcludeType) => {\n    const lines = content.split(/\\r?\\n/);\n    let _content = '';\n    let _block = [];\n\n    function pushBlock() {\n      let indent = -1;\n      _block.forEach(line => {\n        if (line !== '') {\n          const lineIndent = line.match(/^\\s*/)[0].length;\n          indent = indent < 0 ? lineIndent : Math.min(indent, lineIndent);\n        }\n      });\n      _content += _block.map(line => line.substring(indent)).join('\\n') + '\\n';\n      _block = [];\n    }\n\n    if (transcludeType === TRANSCLUDE_LINE) {\n      let matchLines = options.transclude.replace(/[^\\d|,-]/g, '').split(/[|,]/).map((l) => l.split('-').map((v) => +v));\n      matchLines = matchLines.map((l) => {\n        if (l.length === 1) {\n          l = [ l[0], l[0] ];\n        }\n        return l;\n      });\n      matchLines.sort((a, b) => {\n        return a[0] - b[0];\n      });\n      // add sentinel at the end of the lines' spec list:\n      matchLines.push([ lines.length + 1000, lines.length + 1000 ]);\n\n      let matchIndex = -1;\n      let tStart = 0;\n      let tEnd = 0;\n      lines.forEach((line, idx) => {\n        const i = idx + 1;\n        if (tEnd < i) {\n          for (matchIndex++; matchLines[matchIndex][1] < i; matchIndex++)\n            ;\n          const slot = matchLines[matchIndex];\n          tStart = slot[0];\n          tEnd = slot[1];\n        }\n        if (i >= tStart && i <= tEnd) {\n          _block.push(line);\n        }\n      });\n      pushBlock();\n    } else if (transcludeType === TRANSCLUDE_TAG) {\n      const t = mkRegexSnippet(options.transcludeTag);\n      const tag = new RegExp(`${t}>$|^<${t}`);\n      let matched = false;\n\n      for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n\n        if (matched && tag.test(line)) {\n          _block.push(line);\n          pushBlock();\n          break;\n        } else if (matched) {\n          _block.push(line);\n        } else if (tag.test(line)) {\n          _block.push(line);\n          matched = true;\n        }\n      }\n    } else if (transcludeType === TRANSCLUDE_WITH) {\n      const t = mkRegexSnippet(options.transcludeWith);\n      const tag = new RegExp(`(?:(?:###?)|(?:\\\\/\\\\/\\\\/?))\\\\s*${t}`);\n      let matched = false;\n\n      for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        if (tag.test(line)) {\n          matched = !matched;\n          continue;\n        }\n\n        if (matched) {\n          _block.push(line);\n        }\n      }\n      pushBlock();\n    } else if (transcludeType === TRANSCLUDE_AUTO) {\n      const t = mkRegexSnippet(options.transcludeAuto);\n      const tag = new RegExp(`(?:[#/;!(*]*)\\\\s*${t}`);\n      let matched = false;\n\n      for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        if (tag.test(line)) {\n          matched = !matched;\n          continue;\n        }\n\n        if (matched) {\n          _block.push(line);\n        }\n      }\n      pushBlock();\n    }\n    return _content === '' ? NO_LINES_MATCHED : _content;\n  };\n\n  function parser(state, startLine, endLine, silent) {\n    const matcher = [ 64, 91, 99, 111, 100, 101 ];\n    const pos = state.bMarks[startLine] + state.tShift[startLine];\n    const max = state.eMarks[startLine];\n\n    if (state.sCount[startLine] - state.blkIndent >= 4) {\n      return false;\n    }\n\n    for (let i = 0; i < 6; ++i) {\n      const ch = state.src.charCodeAt(pos + i);\n      if (ch !== matcher[i] || pos + i >= max) return false;\n    }\n\n    if (silent) return true;\n\n    // handle code snippet include\n    const d = dataFactory(state, pos, max);\n    const opts = optionsMap(d);\n\n    const token = state.push('fence', 'code', 0);\n    token.info = (d.options.lang || d.file.ext) + opts.meta;\n    token.content = d.fileExists && opts.hasTransclusion ? contentTransclusion(d, opts.transclusionType) : d.content;\n    if (token.content === NO_LINES_MATCHED) {\n      console.warn(NO_LINES_MATCHED, 'Filepath:', d.file.path, 'options:', d.options);\n    }\n    token.markup = '```';\n    token.map = [ startLine, startLine + 1 ];\n\n    state.line = startLine + 1;\n    return true;\n  }\n\n  md.block.ruler.before('fence', 'snippet', parser);\n}\n"],"names":["TRANSCLUDE_WITH","TRANSCLUDE_AUTO","TRANSCLUDE_LINE","TRANSCLUDE_TAG","NO_LINES_MATCHED","plugin","md","options","Object","assign","throwOnError","getRootPath","root","process","cwd","mkPathAbsolute","f","path","resolve","replace","fileExists","fs","existsSync","readFileSync","x","msg","toString","Error","mkRegexSnippet","r","parseOptions","opts","_t","trim","split","forEach","pair","opt","value","dataFactory","state","pos","max","start","end","skipSpacesBack","fullpathWithAtSym","src","slice","fullpath","pathParts","fileParts","length","file","join","name","ext","content","optionsMap","hasHighlight","highlight","hasTransclusion","transclude","transcludeWith","transcludeAuto","transcludeTag","transclusionType","meta","contentTransclusion","transcludeType","lines","_content","_block","pushBlock","indent","line","lineIndent","match","Math","min","map","substring","matchLines","l","v","sort","a","b","push","matchIndex","tStart","tEnd","idx","i","slot","t","tag","RegExp","matched","test","parser","startLine","endLine","silent","matcher","bMarks","tShift","eMarks","sCount","blkIndent","ch","charCodeAt","d","token","info","lang","console","warn","markup","block","ruler","before"],"mappings":"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"}